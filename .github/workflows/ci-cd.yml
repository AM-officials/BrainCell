name: BrainCell CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Frontend tests and lint
  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Run type check
        run: npm run build
      
      - name: Run unit tests
        run: npm test -- --run
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage/coverage-final.json
          flags: frontend

  # Backend tests
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          cd braincell_backend
          pip install -e ".[dev]"
      
      - name: Run linter (ruff)
        run: |
          cd braincell_backend
          ruff check .
      
      - name: Run type check (mypy)
        run: |
          cd braincell_backend
          mypy app --ignore-missing-imports
        continue-on-error: true
      
      - name: Run tests
        run: |
          cd braincell_backend
          python -m pytest tests/ -v --cov=app --cov-report=xml
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./braincell_backend/coverage.xml
          flags: backend

  # E2E tests with Playwright
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install frontend dependencies
        run: npm ci
      
      - name: Install backend dependencies
        run: |
          cd braincell_backend
          pip install -e .
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Run E2E tests
        run: npx playwright test --project=chromium
        env:
          CI: true
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # Build and Docker
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [frontend, backend, e2e]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.frontend
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/braincell-frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/braincell-frontend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/braincell-frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/braincell-frontend:buildcache,mode=max
      
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./braincell_backend
          file: ./braincell_backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/braincell-backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/braincell-backend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/braincell-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/braincell-backend:buildcache,mode=max

  # Deploy (placeholder - customize for your deployment target)
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy notification
        run: |
          echo "ðŸš€ Deployment triggered for commit ${{ github.sha }}"
          echo "Add your deployment commands here (e.g., kubectl, terraform, etc.)"
      
      # Example: Deploy to Kubernetes
      # - name: Deploy to K8s
      #   run: |
      #     kubectl set image deployment/braincell-frontend frontend=${{ secrets.DOCKERHUB_USERNAME }}/braincell-frontend:${{ github.sha }}
      #     kubectl set image deployment/braincell-backend backend=${{ secrets.DOCKERHUB_USERNAME }}/braincell-backend:${{ github.sha }}
